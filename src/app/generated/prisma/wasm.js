
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  avatarUrl: 'avatarUrl',
  email: 'email',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  role: 'role',
  agencyId: 'agencyId'
};

exports.Prisma.PermissionsScalarFieldEnum = {
  id: 'id',
  email: 'email',
  subAccontId: 'subAccontId',
  access: 'access'
};

exports.Prisma.AgencyScalarFieldEnum = {
  id: 'id',
  connectAccountId: 'connectAccountId',
  customerId: 'customerId',
  name: 'name',
  agencyLogo: 'agencyLogo',
  companyEmail: 'companyEmail',
  companyPhone: 'companyPhone',
  whiteLabel: 'whiteLabel',
  address: 'address',
  city: 'city',
  zipCode: 'zipCode',
  state: 'state',
  country: 'country',
  goal: 'goal',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AgencySidebarOptionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  link: 'link',
  icon: 'icon',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  agencyId: 'agencyId',
  subAccountId: 'subAccountId'
};

exports.Prisma.SubAccountsScalarFieldEnum = {
  id: 'id',
  connectAccountId: 'connectAccountId',
  name: 'name',
  subAcctountLogo: 'subAcctountLogo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  companyEmail: 'companyEmail',
  companyPhone: 'companyPhone',
  goal: 'goal',
  address: 'address',
  city: 'city',
  zipCode: 'zipCode',
  state: 'state',
  country: 'country',
  agencyId: 'agencyId'
};

exports.Prisma.PipelinesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  subAccountId: 'subAccountId'
};

exports.Prisma.TriggersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  subAccountId: 'subAccountId'
};

exports.Prisma.AutomationsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  triggerId: 'triggerId',
  published: 'published',
  subAccountId: 'subAccountId'
};

exports.Prisma.AutomationInstanceScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  automationId: 'automationId',
  active: 'active'
};

exports.Prisma.ActionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  automatedId: 'automatedId',
  order: 'order',
  laneId: 'laneId'
};

exports.Prisma.ContactsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  subAccountId: 'subAccountId'
};

exports.Prisma.MediaScalarFieldEnum = {
  id: 'id',
  type: 'type',
  name: 'name',
  link: 'link',
  subAccountId: 'subAccountId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LaneScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  pipelineId: 'pipelineId',
  order: 'order'
};

exports.Prisma.TicketsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lineId: 'lineId',
  order: 'order',
  value: 'value',
  description: 'description',
  userId: 'userId',
  contactId: 'contactId'
};

exports.Prisma.TagsScalarFieldEnum = {
  id: 'id',
  nane: 'nane',
  color: 'color',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  subAccountId: 'subAccountId'
};

exports.Prisma.SubAccountSidebarOptionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  link: 'link',
  icon: 'icon',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  subAccountId: 'subAccountId',
  subAccount: 'subAccount'
};

exports.Prisma.InvitationsScalarFieldEnum = {
  id: 'id',
  email: 'email',
  agencyId: 'agencyId',
  status: 'status',
  role: 'role'
};

exports.Prisma.FunnelsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  description: 'description',
  published: 'published',
  subDomainName: 'subDomainName',
  favicon: 'favicon',
  subAccountId: 'subAccountId',
  liveProducts: 'liveProducts'
};

exports.Prisma.NotificationsScalarFieldEnum = {
  id: 'id',
  notification: 'notification',
  agencyId: 'agencyId',
  subAccountId: 'subAccountId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubscriptionsScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  plan: 'plan',
  price: 'price',
  active: 'active',
  priceId: 'priceId',
  customerId: 'customerId',
  currentPeriodEndDate: 'currentPeriodEndDate',
  subscriptionId: 'subscriptionId',
  agencyId: 'agencyId'
};

exports.Prisma.ClassNameScalarFieldEnum = {
  id: 'id',
  name: 'name',
  color: 'color',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  funnelId: 'funnelId',
  customData: 'customData'
};

exports.Prisma.FunelPagesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  pathName: 'pathName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  visits: 'visits',
  content: 'content',
  order: 'order',
  previewImage: 'previewImage',
  funnelId: 'funnelId'
};

exports.Prisma.AddOnsScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  name: 'name',
  active: 'active',
  priceId: 'priceId',
  agencyId: 'agencyId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  AGENCY_OWNER: 'AGENCY_OWNER',
  AGENCY_ADMIN: 'AGENCY_ADMIN',
  SUBACCOUNT_USER: 'SUBACCOUNT_USER',
  SUBACCOUNT_GUEST: 'SUBACCOUNT_GUEST'
};

exports.TriggerTypes = exports.$Enums.TriggerTypes = {
  CONTACT_FORM: 'CONTACT_FORM'
};

exports.ActionType = exports.$Enums.ActionType = {
  CREATE_CONTACT: 'CREATE_CONTACT'
};

exports.InvitationStatus = exports.$Enums.InvitationStatus = {
  ACCEPTED: 'ACCEPTED',
  REVOKED: 'REVOKED',
  PENDING: 'PENDING'
};

exports.Plans = exports.$Enums.Plans = {
  price_10MhtQIld5Bk5htqogRZXP2e: 'price_10MhtQIld5Bk5htqogRZXP2e',
  price_10MhtcIld5Bk5htqx5CvF5nj: 'price_10MhtcIld5Bk5htqx5CvF5nj'
};

exports.Icon = exports.$Enums.Icon = {
  settings: 'settings',
  chart: 'chart',
  calendar: 'calendar',
  check: 'check',
  chip: 'chip',
  compass: 'compass',
  database: 'database',
  flag: 'flag',
  name: 'name',
  info: 'info',
  link: 'link',
  lock: 'lock',
  messages: 'messages',
  notification: 'notification',
  payment: 'payment',
  power: 'power',
  receipt: 'receipt',
  sheild: 'sheild',
  star: 'star',
  tune: 'tune',
  videorecorder: 'videorecorder',
  wallet: 'wallet',
  warning: 'warning',
  headphones: 'headphones',
  send: 'send',
  pipeline: 'pipeline',
  person: 'person',
  category: 'category',
  contact: 'contact',
  clipboardIcon: 'clipboardIcon'
};

exports.Prisma.ModelName = {
  Users: 'Users',
  Permissions: 'Permissions',
  Agency: 'Agency',
  AgencySidebarOption: 'AgencySidebarOption',
  SubAccounts: 'SubAccounts',
  Pipelines: 'Pipelines',
  Triggers: 'Triggers',
  Automations: 'Automations',
  AutomationInstance: 'AutomationInstance',
  Actions: 'Actions',
  Contacts: 'Contacts',
  Media: 'Media',
  Lane: 'Lane',
  Tickets: 'Tickets',
  Tags: 'Tags',
  SubAccountSidebarOption: 'SubAccountSidebarOption',
  Invitations: 'Invitations',
  Funnels: 'Funnels',
  Notifications: 'Notifications',
  Subscriptions: 'Subscriptions',
  ClassName: 'ClassName',
  FunelPages: 'FunelPages',
  AddOns: 'AddOns'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Dell\\Desktop\\nelson\\NextJsProject\\startup_software_system\\webapp_builder_software\\src\\app\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "C:\\Users\\Dell\\Desktop\\nelson\\NextJsProject\\startup_software_system\\webapp_builder_software\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../../../prisma",
  "clientVersion": "6.10.1",
  "engineVersion": "9b628578b3b7cae625e8c927178f15a170e74a9c",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../src/app/generated/prisma\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider     = \"postgresql\"\n  url          = env(\"DATABASE_URL\")\n  relationMode = \"prisma\"\n}\n\nenum Role {\n  AGENCY_OWNER\n  AGENCY_ADMIN\n  SUBACCOUNT_USER\n  SUBACCOUNT_GUEST\n}\n\nenum TriggerTypes {\n  CONTACT_FORM\n}\n\nenum ActionType {\n  CREATE_CONTACT\n}\n\nenum InvitationStatus {\n  ACCEPTED\n  REVOKED\n  PENDING\n}\n\nenum Plans {\n  price_10MhtQIld5Bk5htqogRZXP2e\n  price_10MhtcIld5Bk5htqx5CvF5nj\n}\n\nenum Icon {\n  settings\n  chart\n  calendar\n  check\n  chip\n  compass\n  database\n  flag\n  name\n  info\n  link\n  lock\n  messages\n  notification\n  payment\n  power\n  receipt\n  sheild\n  star\n  tune\n  videorecorder\n  wallet\n  warning\n  headphones\n  send\n  pipeline\n  person\n  category\n  contact\n  clipboardIcon\n}\n\nmodel Users {\n  id           String          @id @default(uuid())\n  name         String\n  avatarUrl    String          @db.Text\n  email        String          @unique\n  createdAt    DateTime        @default(now())\n  updatedAt    DateTime        @updatedAt\n  role         Role            @default(SUBACCOUNT_USER)\n  agencyId     String?\n  Agency       Agency?         @relation(fields: [agencyId], references: [id], onDelete: Cascade)\n  Permission   Permissions[]\n  Ticket       Tickets[]       @relation(\"UserTickets\")\n  Notification Notifications[]\n\n  @@index([agencyId])\n}\n\nmodel Permissions {\n  id          String      @id @default(uuid())\n  email       String\n  Users       Users       @relation(fields: [email], references: [email])\n  subAccontId String\n  SubAcctount SubAccounts @relation(fields: [subAccontId], references: [id], onDelete: Cascade)\n  access      Boolean\n\n  @@index([subAccontId])\n  @@index([email])\n}\n\nmodel Agency {\n  id               String                @id @default(uuid())\n  connectAccountId String?               @default(\"\")\n  customerId       String                @default(\"\")\n  name             String\n  agencyLogo       String                @db.Text\n  companyEmail     String                @db.Text\n  companyPhone     String\n  whiteLabel       Boolean               @default(true)\n  address          String\n  city             String\n  zipCode          String\n  state            String\n  country          String\n  goal             Int\n  user             Users[]\n  createdAt        DateTime              @default(now())\n  updatedAt        DateTime              @updatedAt\n  SubAccount       SubAccounts[]\n  SidebarOption    AgencySidebarOption[]\n  Invitation       Invitations[]\n  Notification     Notifications[]\n  Subscription     Subscriptions?\n  AddOns           AddOns[]\n}\n\nmodel AgencySidebarOption {\n  id        String   @id @default(uuid())\n  name      String   @default(\"Menu\")\n  link      String   @default(\"#\")\n  icon      Icon     @default(info)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  agencyId String\n  Agency   Agency @relation(fields: [agencyId], references: [id], onDelete: Cascade)\n\n  subAccountId String?\n  SubAccounts  SubAccounts? @relation(fields: [subAccountId], references: [id], onDelete: Cascade)\n\n  @@index([agencyId])\n  @@index([subAccountId])\n}\n\nmodel SubAccounts {\n  id                      String                    @id @default(uuid())\n  connectAccountId        String?                   @default(\"\")\n  name                    String\n  subAcctountLogo         String                    @db.Text\n  createdAt               DateTime                  @default(now())\n  updatedAt               DateTime                  @updatedAt\n  companyEmail            String                    @db.Text\n  companyPhone            String\n  goal                    Int                       @default(5)\n  address                 String\n  city                    String\n  zipCode                 String\n  state                   String\n  country                 String\n  agencyId                String\n  Agency                  Agency                    @relation(fields: [agencyId], references: [id], onDelete: Cascade)\n  SidebarOption           AgencySidebarOption[]\n  Permissions             Permissions[]\n  Funnels                 Funnels[]\n  Media                   Media[]\n  Contact                 Contacts[]\n  Trigger                 Triggers[]\n  Automation              Automations[]\n  Pipeline                Pipelines[]\n  Tags                    Tags[]\n  Notification            Notifications[]\n  SubAccountSidebarOption SubAccountSidebarOption[]\n\n  @@index([agencyId])\n}\n\nmodel Pipelines {\n  id           String      @id @default(uuid())\n  name         String\n  createdAt    DateTime    @default(now())\n  updatedAt    DateTime    @updatedAt\n  Lane         Lane[]\n  subAccountId String\n  SubAccount   SubAccounts @relation(fields: [subAccountId], references: [id], onDelete: Cascade)\n\n  @@index([subAccountId])\n}\n\nmodel Triggers {\n  id           String        @id @default(uuid())\n  name         String\n  type         TriggerTypes\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime      @updatedAt\n  subAccountId String\n  SubAccounts  SubAccounts   @relation(fields: [subAccountId], references: [id], onDelete: Cascade)\n  Automations  Automations[]\n\n  @@index([subAccountId])\n}\n\nmodel Automations {\n  id                 String               @id @default(uuid())\n  name               String\n  createdAt          DateTime             @default(now())\n  updatedAt          DateTime             @updatedAt\n  triggerId          String?\n  published          Boolean              @default(false)\n  Trigger            Triggers?            @relation(fields: [triggerId], references: [id], onDelete: Cascade)\n  subAccountId       String\n  SubAccounts        SubAccounts          @relation(fields: [subAccountId], references: [id], onDelete: Cascade)\n  Actions            Actions[]\n  AutomationInstance AutomationInstance[]\n\n  @@index([triggerId])\n  @@index([subAccountId])\n}\n\nmodel AutomationInstance {\n  id           String      @id @default(uuid())\n  createdAt    DateTime    @default(now())\n  updatedAt    DateTime    @updatedAt\n  automationId String\n  Automations  Automations @relation(fields: [automationId], references: [id], onDelete: Cascade)\n  active       Boolean     @default(false)\n\n  @@index([automationId])\n}\n\nmodel Actions {\n  id          String      @id @default(uuid())\n  name        String\n  type        ActionType\n  createdAt   DateTime    @default(now())\n  updatedAt   DateTime    @updatedAt\n  automatedId String\n  order       Int\n  Automations Automations @relation(fields: [automatedId], references: [id], onDelete: Cascade)\n  laneId      String      @default(\"0\")\n\n  @@index([automatedId])\n}\n\nmodel Contacts {\n  id           String      @id @default(uuid())\n  name         String\n  email        String\n  createdAt    DateTime    @default(now())\n  updatedAt    DateTime    @updatedAt\n  subAccountId String\n  SubAccounts  SubAccounts @relation(fields: [subAccountId], references: [id], onDelete: Cascade)\n  Tickets      Tickets[]   @relation(\"ContactTickets\")\n\n  @@index([subAccountId])\n}\n\nmodel Media {\n  id           String      @id @default(uuid())\n  type         String?\n  name         String\n  link         String      @unique\n  subAccountId String\n  createdAt    DateTime    @default(now())\n  updatedAt    DateTime    @updatedAt\n  SubAccounts  SubAccounts @relation(fields: [subAccountId], references: [id], onDelete: Cascade)\n\n  @@index([subAccountId])\n}\n\nmodel Lane {\n  id         String    @id @default(uuid())\n  name       String\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n  pipelineId String\n  Pipeline   Pipelines @relation(fields: [pipelineId], references: [id], onDelete: Cascade)\n  Tickets    Tickets[]\n  order      Int       @default(0)\n\n  @@index([pipelineId])\n}\n\nmodel Tickets {\n  id          String    @id @default(uuid())\n  name        String\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  lineId      String\n  Lane        Lane      @relation(fields: [lineId], references: [id], onDelete: Cascade, map: \"LaneTicket_FK\")\n  order       Int       @default(0)\n  value       Decimal?\n  description String?\n  tags        Tags[]\n  userId      String?\n  Users       Users?    @relation(\"UserTickets\", fields: [userId], references: [id], onDelete: Cascade)\n  contactId   String?\n  Contacts    Contacts? @relation(\"ContactTickets\", fields: [contactId], references: [id], onDelete: Cascade)\n\n  @@index([lineId])\n  @@index([userId])\n  @@index([contactId])\n}\n\nmodel Tags {\n  id           String      @id @default(uuid())\n  nane         String\n  color        String\n  createdAt    DateTime    @default(now())\n  updatedAt    DateTime    @updatedAt\n  subAccountId String\n  SubAccounts  SubAccounts @relation(fields: [subAccountId], references: [id], onDelete: Cascade)\n  Tickets      Tickets[]\n\n  @@index([subAccountId])\n}\n\nmodel SubAccountSidebarOption {\n  id           String       @id @default(uuid())\n  name         String\n  link         String       @default(\"#\")\n  icon         Icon         @default(info)\n  createdAt    DateTime     @default(now())\n  updatedAt    DateTime     @updatedAt\n  subAccountId String\n  SubAccount   SubAccounts? @relation(fields: [subAccountId], references: [id], onDelete: Cascade)\n  subAccount   String?\n\n  @@index([subAccountId])\n}\n\nmodel Invitations {\n  id       String           @id @default(uuid())\n  email    String           @unique\n  agencyId String\n  Agency   Agency           @relation(fields: [agencyId], references: [id], onDelete: Cascade)\n  status   InvitationStatus @default(PENDING)\n  role     Role             @default(SUBACCOUNT_USER)\n\n  @@index([agencyId])\n}\n\nmodel Funnels {\n  id            String       @id @default(uuid())\n  name          String\n  createdAt     DateTime     @default(now())\n  updatedAt     DateTime     @updatedAt\n  description   String?\n  published     Boolean      @default(false)\n  subDomainName String?      @unique\n  favicon       String?      @db.Text\n  subAccountId  String\n  SubAccount    SubAccounts  @relation(fields: [subAccountId], references: [id], onDelete: Cascade)\n  FunelPages    FunelPages[]\n  liveProducts  String?      @default(\"[]\")\n  className     ClassName[]\n\n  @@index([subAccountId])\n}\n\nmodel Notifications {\n  id           String  @id @default(uuid())\n  notification String\n  agencyId     String\n  subAccountId String?\n  userId       String\n\n  Users       Users        @relation(fields: [userId], references: [id], onDelete: Cascade)\n  Agency      Agency       @relation(fields: [agencyId], references: [id], onDelete: Cascade)\n  SubAccounts SubAccounts? @relation(fields: [subAccountId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([agencyId])\n  @@index([subAccountId])\n  @@index([userId])\n}\n\nmodel Subscriptions {\n  id                   String   @id @default(uuid())\n  createdAt            DateTime @default(now())\n  updatedAt            DateTime @updatedAt\n  plan                 Plans?\n  price                String?\n  active               Boolean  @default(false)\n  priceId              String\n  customerId           String\n  currentPeriodEndDate DateTime\n  subscriptionId       String   @unique\n  agencyId             String?  @unique\n  Agency               Agency?  @relation(fields: [agencyId], references: [id])\n\n  @@index([customerId])\n}\n\nmodel ClassName {\n  id         String   @id @default(uuid())\n  name       String\n  color      String\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  funnelId   String\n  customData String?  @db.Text\n  Funnel     Funnels  @relation(fields: [funnelId], references: [id], onDelete: Cascade)\n\n  @@index([funnelId])\n}\n\nmodel FunelPages {\n  id           String   @id @default(uuid())\n  name         String\n  pathName     String   @default(\"\")\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  visits       Int      @default(0)\n  content      String?  @db.Text\n  order        Int\n  previewImage String   @db.Text\n  funnelId     String\n  Funnel       Funnels  @relation(fields: [funnelId], references: [id], onDelete: Cascade)\n\n  @@index([funnelId])\n}\n\nmodel AddOns {\n  id        String   @id @default(uuid())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  name      String\n  active    Boolean  @default(false)\n  priceId   String   @unique\n  agencyId  String?\n  Agency    Agency?  @relation(fields: [agencyId], references: [id])\n\n  @@index([agencyId])\n}\n",
  "inlineSchemaHash": "bdb25e95eaeee6e8e1906568da2f16026ebdbd11905c503618c6ce411acfc0a1",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToUsers\"},{\"name\":\"Permission\",\"kind\":\"object\",\"type\":\"Permissions\",\"relationName\":\"PermissionsToUsers\"},{\"name\":\"Ticket\",\"kind\":\"object\",\"type\":\"Tickets\",\"relationName\":\"UserTickets\"},{\"name\":\"Notification\",\"kind\":\"object\",\"type\":\"Notifications\",\"relationName\":\"NotificationsToUsers\"}],\"dbName\":null},\"Permissions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Users\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"PermissionsToUsers\"},{\"name\":\"subAccontId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SubAcctount\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"PermissionsToSubAccounts\"},{\"name\":\"access\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Agency\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"connectAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agencyLogo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"whiteLabel\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"goal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"AgencyToUsers\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"SubAccount\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"AgencyToSubAccounts\"},{\"name\":\"SidebarOption\",\"kind\":\"object\",\"type\":\"AgencySidebarOption\",\"relationName\":\"AgencyToAgencySidebarOption\"},{\"name\":\"Invitation\",\"kind\":\"object\",\"type\":\"Invitations\",\"relationName\":\"AgencyToInvitations\"},{\"name\":\"Notification\",\"kind\":\"object\",\"type\":\"Notifications\",\"relationName\":\"AgencyToNotifications\"},{\"name\":\"Subscription\",\"kind\":\"object\",\"type\":\"Subscriptions\",\"relationName\":\"AgencyToSubscriptions\"},{\"name\":\"AddOns\",\"kind\":\"object\",\"type\":\"AddOns\",\"relationName\":\"AddOnsToAgency\"}],\"dbName\":null},\"AgencySidebarOption\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"enum\",\"type\":\"Icon\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToAgencySidebarOption\"},{\"name\":\"subAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SubAccounts\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"AgencySidebarOptionToSubAccounts\"}],\"dbName\":null},\"SubAccounts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"connectAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subAcctountLogo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companyEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"goal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToSubAccounts\"},{\"name\":\"SidebarOption\",\"kind\":\"object\",\"type\":\"AgencySidebarOption\",\"relationName\":\"AgencySidebarOptionToSubAccounts\"},{\"name\":\"Permissions\",\"kind\":\"object\",\"type\":\"Permissions\",\"relationName\":\"PermissionsToSubAccounts\"},{\"name\":\"Funnels\",\"kind\":\"object\",\"type\":\"Funnels\",\"relationName\":\"FunnelsToSubAccounts\"},{\"name\":\"Media\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"MediaToSubAccounts\"},{\"name\":\"Contact\",\"kind\":\"object\",\"type\":\"Contacts\",\"relationName\":\"ContactsToSubAccounts\"},{\"name\":\"Trigger\",\"kind\":\"object\",\"type\":\"Triggers\",\"relationName\":\"SubAccountsToTriggers\"},{\"name\":\"Automation\",\"kind\":\"object\",\"type\":\"Automations\",\"relationName\":\"AutomationsToSubAccounts\"},{\"name\":\"Pipeline\",\"kind\":\"object\",\"type\":\"Pipelines\",\"relationName\":\"PipelinesToSubAccounts\"},{\"name\":\"Tags\",\"kind\":\"object\",\"type\":\"Tags\",\"relationName\":\"SubAccountsToTags\"},{\"name\":\"Notification\",\"kind\":\"object\",\"type\":\"Notifications\",\"relationName\":\"NotificationsToSubAccounts\"},{\"name\":\"SubAccountSidebarOption\",\"kind\":\"object\",\"type\":\"SubAccountSidebarOption\",\"relationName\":\"SubAccountSidebarOptionToSubAccounts\"}],\"dbName\":null},\"Pipelines\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Lane\",\"kind\":\"object\",\"type\":\"Lane\",\"relationName\":\"LaneToPipelines\"},{\"name\":\"subAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SubAccount\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"PipelinesToSubAccounts\"}],\"dbName\":null},\"Triggers\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TriggerTypes\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SubAccounts\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"SubAccountsToTriggers\"},{\"name\":\"Automations\",\"kind\":\"object\",\"type\":\"Automations\",\"relationName\":\"AutomationsToTriggers\"}],\"dbName\":null},\"Automations\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"triggerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"published\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Trigger\",\"kind\":\"object\",\"type\":\"Triggers\",\"relationName\":\"AutomationsToTriggers\"},{\"name\":\"subAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SubAccounts\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"AutomationsToSubAccounts\"},{\"name\":\"Actions\",\"kind\":\"object\",\"type\":\"Actions\",\"relationName\":\"ActionsToAutomations\"},{\"name\":\"AutomationInstance\",\"kind\":\"object\",\"type\":\"AutomationInstance\",\"relationName\":\"AutomationInstanceToAutomations\"}],\"dbName\":null},\"AutomationInstance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"automationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Automations\",\"kind\":\"object\",\"type\":\"Automations\",\"relationName\":\"AutomationInstanceToAutomations\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Actions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ActionType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"automatedId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Automations\",\"kind\":\"object\",\"type\":\"Automations\",\"relationName\":\"ActionsToAutomations\"},{\"name\":\"laneId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Contacts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SubAccounts\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"ContactsToSubAccounts\"},{\"name\":\"Tickets\",\"kind\":\"object\",\"type\":\"Tickets\",\"relationName\":\"ContactTickets\"}],\"dbName\":null},\"Media\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"SubAccounts\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"MediaToSubAccounts\"}],\"dbName\":null},\"Lane\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"pipelineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Pipeline\",\"kind\":\"object\",\"type\":\"Pipelines\",\"relationName\":\"LaneToPipelines\"},{\"name\":\"Tickets\",\"kind\":\"object\",\"type\":\"Tickets\",\"relationName\":\"LaneToTickets\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Tickets\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Lane\",\"kind\":\"object\",\"type\":\"Lane\",\"relationName\":\"LaneToTickets\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"Tags\",\"relationName\":\"TagsToTickets\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Users\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"UserTickets\"},{\"name\":\"contactId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Contacts\",\"kind\":\"object\",\"type\":\"Contacts\",\"relationName\":\"ContactTickets\"}],\"dbName\":null},\"Tags\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nane\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SubAccounts\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"SubAccountsToTags\"},{\"name\":\"Tickets\",\"kind\":\"object\",\"type\":\"Tickets\",\"relationName\":\"TagsToTickets\"}],\"dbName\":null},\"SubAccountSidebarOption\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"enum\",\"type\":\"Icon\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SubAccount\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"SubAccountSidebarOptionToSubAccounts\"},{\"name\":\"subAccount\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Invitations\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToInvitations\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvitationStatus\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"}],\"dbName\":null},\"Funnels\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"published\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"subDomainName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"favicon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SubAccount\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"FunnelsToSubAccounts\"},{\"name\":\"FunelPages\",\"kind\":\"object\",\"type\":\"FunelPages\",\"relationName\":\"FunelPagesToFunnels\"},{\"name\":\"liveProducts\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"className\",\"kind\":\"object\",\"type\":\"ClassName\",\"relationName\":\"ClassNameToFunnels\"}],\"dbName\":null},\"Notifications\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notification\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Users\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"NotificationsToUsers\"},{\"name\":\"Agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToNotifications\"},{\"name\":\"SubAccounts\",\"kind\":\"object\",\"type\":\"SubAccounts\",\"relationName\":\"NotificationsToSubAccounts\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Subscriptions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"plan\",\"kind\":\"enum\",\"type\":\"Plans\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentPeriodEndDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AgencyToSubscriptions\"}],\"dbName\":null},\"ClassName\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"funnelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Funnel\",\"kind\":\"object\",\"type\":\"Funnels\",\"relationName\":\"ClassNameToFunnels\"}],\"dbName\":null},\"FunelPages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pathName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"visits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"previewImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"funnelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Funnel\",\"kind\":\"object\",\"type\":\"Funnels\",\"relationName\":\"FunelPagesToFunnels\"}],\"dbName\":null},\"AddOns\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agencyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Agency\",\"kind\":\"object\",\"type\":\"Agency\",\"relationName\":\"AddOnsToAgency\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

